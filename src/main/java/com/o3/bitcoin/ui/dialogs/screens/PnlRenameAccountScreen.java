/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.o3.bitcoin.ui.dialogs.screens;

import com.o3.bitcoin.service.WalletService;
import com.o3.bitcoin.ui.ApplicationUI;
import com.o3.bitcoin.ui.dialogs.DlgCreateNewAccount;
import com.o3.bitcoin.ui.dialogs.DlgRenameAccount;
import com.o3.bitcoin.util.ResourcesProvider;
import javax.swing.JOptionPane;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author
 */

/**
 * <p>Class that creates UI form for Rename Account dialog</p> 
 */
public class PnlRenameAccountScreen extends javax.swing.JPanel {

    private static final Logger logger = LoggerFactory.getLogger(PnlLoginScreen.class);
    
    private final DlgRenameAccount dlgRenameAccount;
    private final WalletService service;
    private String oldAccountName;
    
   /**
     * Creates new form PnlNewPaymentScreen
     *
     * @param DlgCreateNewAccount
     * @param service
     */
    public PnlRenameAccountScreen(DlgRenameAccount dlgRenameAccount, WalletService service, String oldAccountName ) {
        this.dlgRenameAccount = dlgRenameAccount;
        this.service = service;
        this.oldAccountName = oldAccountName;
        initComponents();
        loadData();
    }
    
    private void loadData() {
        txtOldAccountName.setText(oldAccountName);
        txtOldAccountName.setEnabled(false);
    }

    /**
     * function that validates ui form data
     */
    public void validateData() {
        String newAccountName = txtNewAccountName.getText() != null ? new String(txtNewAccountName.getText()) : "";
        if (newAccountName.isEmpty()) {
            txtNewAccountName.requestFocusInWindow();
            throw new IllegalArgumentException("New Account Name is required.");
        }
    }

    /**
     * function that renames an account
     * @return whether account renamed or not
     */
    public boolean renameAccount() {
        try {
            validateData();
            String newAccountName = new String(txtNewAccountName.getText());
            if( !service.isAccountExists(txtNewAccountName.getText()) )
            {
                if(service.renameAccount(oldAccountName, newAccountName) )
                {
                    dlgRenameAccount.setNewAccountName(new String(txtNewAccountName.getText()));
                    return true;
                }
                else
                    return false;
            }
            else
            {
                 JOptionPane.showMessageDialog(null, "ERROR: " + txtNewAccountName.getText() + " already exists", "ERROR", JOptionPane.ERROR_MESSAGE);
                 return false;
            }
        } catch (Exception e) {
            logger.error("Account rename failed: {}", e.getMessage());
            ApplicationUI.get().showError(e);
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblOldAccountName = new javax.swing.JLabel();
        txtOldAccountName = new javax.swing.JTextField();
        lblNewAccountName = new javax.swing.JLabel();
        txtNewAccountName = new javax.swing.JTextField();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        lblOldAccountName.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        lblOldAccountName.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        lblOldAccountName.setText("Old Account Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblOldAccountName, gridBagConstraints);

        txtOldAccountName.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        txtOldAccountName.setPreferredSize(new java.awt.Dimension(275, 33));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtOldAccountName, gridBagConstraints);

        lblNewAccountName.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        lblNewAccountName.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        lblNewAccountName.setText("New Account Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblNewAccountName, gridBagConstraints);

        txtNewAccountName.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        txtNewAccountName.setPreferredSize(new java.awt.Dimension(275, 33));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtNewAccountName, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblNewAccountName;
    private javax.swing.JLabel lblOldAccountName;
    private javax.swing.JTextField txtNewAccountName;
    private javax.swing.JTextField txtOldAccountName;
    // End of variables declaration//GEN-END:variables
}
