/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.o3.bitcoin.ui.dialogs.screens;

import com.google.zxing.EncodeHintType;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import com.o3.bitcoin.hdwallet.HDKey;
import com.o3.bitcoin.model.manager.WalletManager;
import com.o3.bitcoin.qrcode.QRCodeUtil;
import com.o3.bitcoin.util.ResourcesProvider;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author
 */

/**
 * <p>Class that creates UI form for wallet seed QRCode dialog</p> 
 */
public class PnlWalletSeedQRCodeScreen extends javax.swing.JPanel {

    private static int count = 0;
    private String address;
    private String qrcodeFilePath = null;
    
    /**
     * Creates new form PnlWalletSeedQRCodeScreen
     */
    public PnlWalletSeedQRCodeScreen() {
        initComponents();
        lblPassword.setVisible(false);
        txtPassword.setVisible(false);
        lblConfirmPassword.setVisible(false);
        txtConfirmPassword.setVisible(false);
        lblWalletSeed.setVisible(false);
        
        long seconds = HDKey.EPOCH;
        Date creationDate = new Date(seconds * 1000);
        loadQRCode(WalletManager.get().getCurentWalletService().getMnemonicCodes(),new SimpleDateFormat("dd/MM/yyyy").format(creationDate));
    }
    
    /**
     * function that creates and loads QRCode from wallet seed
     */
    public void loadQRCode(String walletSeed, String creationDate) {
        try {
            File tmpDir = new File("tmp");
            if( !tmpDir.exists()) {
                tmpDir.mkdir();
            }
            qrcodeFilePath = "tmp" + File.separator + "ws-qrcode"+count+".png";
            if( count > 0 ) {
                String oldQrcodeFilePath = "tmp" + File.separator + "ws-qrcode"+(count-1)+".png";
                File file = new File(oldQrcodeFilePath);
                if( file.exists() )
                    file.delete();
            }
            String charset = "UTF-8";
            Map hintMap = new HashMap();
            hintMap.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);
            QRCodeUtil.createQRCode(walletSeed+"\n"+creationDate, qrcodeFilePath, charset, hintMap, 200, 200);
            lblSeedQRCode.setIcon(new ImageIcon(qrcodeFilePath));
            count++;
        }catch( Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    public String getQrcodeFilePath() {
        return qrcodeFilePath;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        lblConfirmPassword = new javax.swing.JLabel();
        txtConfirmPassword = new javax.swing.JTextField();
        lblWalletSeed = new javax.swing.JLabel();
        lblSeedQRCode = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        lblPassword.setFont(ResourcesProvider.Fonts.DEFAULT_HEADING_FONT);
        lblPassword.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        lblPassword.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblPassword, gridBagConstraints);

        txtPassword.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        txtPassword.setPreferredSize(new java.awt.Dimension(200, 31));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtPassword, gridBagConstraints);

        lblConfirmPassword.setFont(ResourcesProvider.Fonts.DEFAULT_HEADING_FONT);
        lblConfirmPassword.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        lblConfirmPassword.setText("Confirm Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblConfirmPassword, gridBagConstraints);

        txtConfirmPassword.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        txtConfirmPassword.setPreferredSize(new java.awt.Dimension(200, 31));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtConfirmPassword, gridBagConstraints);

        lblWalletSeed.setFont(ResourcesProvider.Fonts.DEFAULT_HEADING_FONT);
        lblWalletSeed.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        lblWalletSeed.setText("Wallet Seed:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblWalletSeed, gridBagConstraints);

        lblSeedQRCode.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        lblSeedQRCode.setPreferredSize(new java.awt.Dimension(200, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblSeedQRCode, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblConfirmPassword;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblSeedQRCode;
    private javax.swing.JLabel lblWalletSeed;
    private javax.swing.JTextField txtConfirmPassword;
    private javax.swing.JTextField txtPassword;
    // End of variables declaration//GEN-END:variables
}
