/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.o3.bitcoin.ui.dialogs.screens;

import com.o3.bitcoin.model.WalletConfig;
import com.o3.bitcoin.model.manager.ConfigManager;
import com.o3.bitcoin.util.seed.SeedGeneratorUtils;
import com.o3.bitcoin.model.manager.WalletManager;
import com.o3.bitcoin.service.WalletService;
import com.o3.bitcoin.ui.component.XButtonFactory;
import com.o3.bitcoin.ui.dialogs.DlgCreateWallet;
import com.o3.bitcoin.ui.dialogs.DlgCreateWatchOnlyWallet;
import com.o3.bitcoin.util.ResourcesProvider;
import com.o3.bitcoin.util.ResourcesProvider.Colors;
import java.awt.Color;
import java.io.File;
import java.util.List;
import javax.swing.JFileChooser;
import org.bitcoinj.core.NetworkParameters;
import org.bitcoinj.params.MainNetParams;
import org.bitcoinj.params.TestNet3Params;

/**
 *
 * @author
 */
public class PnlCreateWatchOnlyWalletScreen extends javax.swing.JPanel {
    
    private DlgCreateWatchOnlyWallet dialog;
    private WalletConfig originalWalletConfig;

    /**
     * Creates new form PnlCreateWalletScreen
     *
     * @param dialog
     * @param originalWalletConfig
     */
    public PnlCreateWatchOnlyWalletScreen(DlgCreateWatchOnlyWallet dialog, WalletConfig originalWalletConfig) {
        initComponents();
        this.dialog = dialog;
        this.originalWalletConfig = originalWalletConfig;
        setup();
    }
    
    private void setup() {
        XButtonFactory.themedButton(btnBrowseLocation)
                .color(Color.WHITE)
                .background(Colors.NAV_MENU_DASHBOARD_COLOR);
        txtWalletName.setText("Watch-" + originalWalletConfig.getId());
        txtLocation.setText(WalletManager.DEFAULT_WALLET_ROOT);
        rdoMainNet.setEnabled(WalletManager.get().isEmpty());
        rdoTestNet.setEnabled(WalletManager.get().isEmpty());
        rdoMainNet.setSelected(ConfigManager.config().getDefaultNetwork().toLowerCase().contains("main"));
        rdoTestNet.setSelected(!ConfigManager.config().getDefaultNetwork().toLowerCase().contains("main"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnGroupBitcoinNetwork = new javax.swing.ButtonGroup();
        lblWalletName = new javax.swing.JLabel();
        txtWalletName = new javax.swing.JTextField();
        lblLocation = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        btnBrowseLocation = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rdoMainNet = new javax.swing.JRadioButton();
        rdoTestNet = new javax.swing.JRadioButton();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        lblWalletName.setFont(ResourcesProvider.Fonts.DEFAULT_HEADING_FONT);
        lblWalletName.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        lblWalletName.setText("Wallet Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblWalletName, gridBagConstraints);

        txtWalletName.setFont(ResourcesProvider.Fonts.DEFAULT_HEADING_FONT);
        txtWalletName.setForeground(Color.BLACK);
        txtWalletName.setPreferredSize(new java.awt.Dimension(275, 33));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtWalletName, gridBagConstraints);

        lblLocation.setFont(ResourcesProvider.Fonts.DEFAULT_HEADING_FONT);
        lblLocation.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        lblLocation.setText("Location:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblLocation, gridBagConstraints);

        txtLocation.setEditable(false);
        txtLocation.setFont(ResourcesProvider.Fonts.BOLD_SMALL_FONT);
        txtLocation.setForeground(Color.BLACK);
        txtLocation.setText("<Location>");
        txtLocation.setPreferredSize(new java.awt.Dimension(275, 33));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtLocation, gridBagConstraints);

        btnBrowseLocation.setText("...");
        btnBrowseLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseLocationActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        add(btnBrowseLocation, gridBagConstraints);

        jLabel2.setFont(ResourcesProvider.Fonts.DEFAULT_HEADING_FONT);
        jLabel2.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        jLabel2.setText("Bitcoin Network:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel2, gridBagConstraints);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnGroupBitcoinNetwork.add(rdoMainNet);
        rdoMainNet.setFont(ResourcesProvider.Fonts.DEFAULT_HEADING_FONT);
        rdoMainNet.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        rdoMainNet.setText("Main Net");
        rdoMainNet.setOpaque(false);
        jPanel1.add(rdoMainNet);

        btnGroupBitcoinNetwork.add(rdoTestNet);
        rdoTestNet.setFont(ResourcesProvider.Fonts.DEFAULT_HEADING_FONT);
        rdoTestNet.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        rdoTestNet.setText("Test Net");
        rdoTestNet.setOpaque(false);
        jPanel1.add(rdoTestNet);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseLocationActionPerformed
        JFileChooser jc = new JFileChooser(new File(txtLocation.getText()));
        jc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jc.setMultiSelectionEnabled(false);
        int retval = jc.showOpenDialog(dialog);
        if (retval == JFileChooser.APPROVE_OPTION) {
            txtLocation.setText(jc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_btnBrowseLocationActionPerformed
    
    public String getLocationPath() {
        return txtLocation.getText();
    }
    
    public String getWalletName() {
        return txtWalletName.getText();
    }
    
    public boolean validateData() {
        if (txtWalletName.getText() == null || txtWalletName.getText().isEmpty()) {
            txtWalletName.requestFocusInWindow();
            throw new IllegalArgumentException("Wallet Name is required.");
        } else {
            if (!WalletManager.get().isUniqueWalletId(txtWalletName.getText().trim())) {
                txtWalletName.requestFocusInWindow();
                throw new IllegalArgumentException("A wallet with same name already exists.");
            }
        }
        String location = txtLocation.getText();
        if (location == null || location.isEmpty()) {
            btnBrowseLocation.requestFocusInWindow();
            throw new IllegalArgumentException("Wallet location is required.");
        }
        if (!location.endsWith(File.separator)) {
            location += File.separator;
        }
        if (WalletManager.get().isWalletLocationMarkedForDeletion(location + txtWalletName.getText().trim())) {
            btnBrowseLocation.requestFocusInWindow();
            throw new IllegalArgumentException("<html>Selected wallet location is marked for deletion. An application restart is required to make this location available for a new wallet.</html>");
        } else if (!WalletManager.get().isWalletLocationAvailable(location + txtWalletName.getText().trim())) {
            btnBrowseLocation.requestFocusInWindow();
            throw new IllegalArgumentException("Wallet location is already in use by another wallet.");
        } else {
            location = location.trim();
            File path = new File(location);
            if (!path.exists()) {
                path.mkdirs();
                if (!path.exists()) {
                    btnBrowseLocation.requestFocusInWindow();
                    throw new IllegalArgumentException("Not a valid wallet location.");
                }
            }
        }
        return true;
    }
    
    public NetworkParameters getSelectedNetwork() {
        return rdoMainNet.isSelected() ? MainNetParams.get() : TestNet3Params.get();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowseLocation;
    private javax.swing.ButtonGroup btnGroupBitcoinNetwork;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblWalletName;
    private javax.swing.JRadioButton rdoMainNet;
    private javax.swing.JRadioButton rdoTestNet;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtWalletName;
    // End of variables declaration//GEN-END:variables
}
