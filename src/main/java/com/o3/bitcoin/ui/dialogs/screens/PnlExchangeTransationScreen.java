/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.o3.bitcoin.ui.dialogs.screens;

import com.o3.bitcoin.model.manager.WalletManager;
import com.o3.bitcoin.ui.dialogs.DlgExchangeTransaction;
import com.o3.bitcoin.ui.dialogs.DlgNewPayment;
import com.o3.bitcoin.ui.dialogs.DlgQRCode;
import com.o3.bitcoin.util.ResourcesProvider;
import com.o3.bitcoin.util.ResourcesProvider.Colors;
import com.o3.bitcoin.util.ResourcesProvider.Fonts;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.font.TextAttribute;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.URISyntaxException;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;

/**
 *
 * @author
 */
public class PnlExchangeTransationScreen extends javax.swing.JPanel {

    private DlgExchangeTransaction dlgExchangeTransaction = null;
    private String orderStatusUrl = "https://shapeshift.io/#/status/";
    private String dAddress="";
    private String satoshiPrice="";
   
    /**
     * Creates new form pnlExchangeTransationScreen
     */
    public PnlExchangeTransationScreen(DlgExchangeTransaction dlgExchangeTransaction, String title, String orderId, String depositeAddress) {
        this.dlgExchangeTransaction = dlgExchangeTransaction;
        initComponents();
        lblOrderIdValue.setText(orderId);
        lblDepositeAddressValue.setText(depositeAddress);
        lblOrderStatusUrlValue.setText(orderStatusUrl + orderId);
        setLabelTextUnderline(lblOrderStatusUrlValue);
        lblDepositeAmount.setVisible(false);
        lblDepositeAmountValue.setVisible(false);
        lblExpiryTime.setVisible(false);
        lblExpiryTimeValue.setVisible(false);
        dlgExchangeTransaction.pack();
    }

    public PnlExchangeTransationScreen(DlgExchangeTransaction dlgExchangeTransaction, String title, String orderId, String depositeAddress, String depositeAmount, String expiryTime) {
        this.dlgExchangeTransaction = dlgExchangeTransaction;
        initComponents();
        lblOrderIdValue.setText(orderId);
        lblDepositeAddressValue.setText(depositeAddress);
        lblDepositeAmountValue.setText(depositeAmount);
        lblExpiryTimeValue.setText(expiryTime);
        lblOrderStatusUrlValue.setText(orderStatusUrl + orderId);

        setLabelTextUnderline(lblOrderStatusUrlValue);

    }
    
    public PnlExchangeTransationScreen(DlgExchangeTransaction dlgExchangeTransaction, String title, String orderId, String depositeAddress, String depositeAmount, String expiryTime,String statusAddress,String satoshiPrice) {
        this.dlgExchangeTransaction = dlgExchangeTransaction;
        initComponents();
        lblOrderIdValue.setText(orderId);
        lblDepositeAddressValue.setText(depositeAddress);
        lblDepositeAmountValue.setText(depositeAmount);
        lblExpiryTimeValue.setText(expiryTime);
        if(statusAddress.isEmpty()||statusAddress.equalsIgnoreCase("N/A")){
            lblOrderStatusUrlValue.setVisible(false);
            lblOrderStatusUrl.setVisible(false);
        }else{
            lblOrderStatusUrlValue.setText(statusAddress);
        }
        
        setLabelTextUnderline(lblOrderStatusUrlValue);
       this.dAddress = depositeAddress;
       this.satoshiPrice = satoshiPrice;
    }
    
  public void payCoins(){
       DlgNewPayment dlgNewPayment = new DlgNewPayment(WalletManager.get().getCurentWalletService());
                            dlgNewPayment.centerOnScreen();
                            dlgNewPayment.setReceiveAddress(dAddress);
                            dlgNewPayment.setAmount(satoshiPrice);
                            dlgNewPayment.setVisible(true);
  }

    private void setLabelTextUnderline(javax.swing.JLabel label) {
        Font font = label.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        label.setFont(font.deriveFont(attributes));
    }

    public void setDepositAddress(String address) {

        lblDepositeAddressValue.setText(address);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblDepositAddress = new javax.swing.JLabel();
        lblDepositeAmount = new javax.swing.JLabel();
        lblExpiryTime = new javax.swing.JLabel();
        lblDepositeAmountValue = new javax.swing.JLabel();
        lblExpiryTimeValue = new javax.swing.JLabel();
        lblOrderIdValue = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblDepositeAddressValue = new javax.swing.JLabel();
        lblQrcode = new javax.swing.JLabel();
        javax.swing.JLabel lblOrderId = new javax.swing.JLabel();
        lblOrderStatusUrlValue = new javax.swing.JLabel();
        lblOrderStatusUrl = new javax.swing.JLabel();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        lblDepositAddress.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        lblDepositAddress.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        lblDepositAddress.setText("Deposit Address:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblDepositAddress, gridBagConstraints);

        lblDepositeAmount.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        lblDepositeAmount.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        lblDepositeAmount.setText("Deposit Amount:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblDepositeAmount, gridBagConstraints);

        lblExpiryTime.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        lblExpiryTime.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        lblExpiryTime.setText("Tranasaction Expiry Time:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblExpiryTime, gridBagConstraints);

        lblDepositeAmountValue.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        lblDepositeAmountValue.setText("...");
        lblDepositeAmountValue.setToolTipText("Click to copy to clipboard");
        lblDepositeAmountValue.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblDepositeAmountValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDepositeAmountValueMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblDepositeAmountValue, gridBagConstraints);

        lblExpiryTimeValue.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        lblExpiryTimeValue.setText("...");
        lblExpiryTimeValue.setToolTipText("Click to copy to clipboard");
        lblExpiryTimeValue.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblExpiryTimeValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExpiryTimeValueMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblExpiryTimeValue, gridBagConstraints);

        lblOrderIdValue.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        lblOrderIdValue.setText("...");
        lblOrderIdValue.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblOrderIdValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOrderIdValueMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblOrderIdValue, gridBagConstraints);

        jPanel1.setMinimumSize(new java.awt.Dimension(390, 28));
        jPanel1.setPreferredSize(new java.awt.Dimension(390, 32));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        lblDepositeAddressValue.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        lblDepositeAddressValue.setText("...");
        lblDepositeAddressValue.setToolTipText("Click to copy to clipboard");
        lblDepositeAddressValue.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblDepositeAddressValue.setMaximumSize(new java.awt.Dimension(350, 25));
        lblDepositeAddressValue.setMinimumSize(new java.awt.Dimension(350, 25));
        lblDepositeAddressValue.setPreferredSize(new java.awt.Dimension(350, 25));
        lblDepositeAddressValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblDepositeAddressValueMousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(lblDepositeAddressValue, gridBagConstraints);

        lblQrcode.setBackground(Colors.SCREEN_TOP_PANEL_BG_COLOR);
        lblQrcode.setFont(Fonts.BOLD_LARGE_FONT);
        lblQrcode.setForeground(Color.WHITE);
        lblQrcode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQrcode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/qrcode.png"))); // NOI18N
        lblQrcode.setBorder(javax.swing.BorderFactory.createLineBorder(Colors.TABLE_CELL_BORDER_COLOR));
        lblQrcode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblQrcode.setMaximumSize(new java.awt.Dimension(18, 18));
        lblQrcode.setMinimumSize(new java.awt.Dimension(18, 18));
        lblQrcode.setOpaque(true);
        lblQrcode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblQrcodeMousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(lblQrcode, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        add(jPanel1, gridBagConstraints);

        lblOrderId.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        lblOrderId.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        lblOrderId.setText("Order Id:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblOrderId, gridBagConstraints);

        lblOrderStatusUrlValue.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        lblOrderStatusUrlValue.setForeground(Colors.NAV_MENU_WALLET_COLOR);
        lblOrderStatusUrlValue.setText("...");
        lblOrderStatusUrlValue.setToolTipText("Click to copy to clipboard");
        lblOrderStatusUrlValue.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblOrderStatusUrlValue.setMaximumSize(new java.awt.Dimension(380, 25));
        lblOrderStatusUrlValue.setMinimumSize(new java.awt.Dimension(380, 25));
        lblOrderStatusUrlValue.setPreferredSize(new java.awt.Dimension(380, 25));
        lblOrderStatusUrlValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblOrderStatusUrlValueMousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(lblOrderStatusUrlValue, gridBagConstraints);

        lblOrderStatusUrl.setFont(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        lblOrderStatusUrl.setForeground(ResourcesProvider.Colors.DEFAULT_HEADING_COLOR);
        lblOrderStatusUrl.setText("Order Status URL:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblOrderStatusUrl, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void lblDepositeAddressValueMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDepositeAddressValueMousePressed
        String value = lblDepositeAddressValue.getText();
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(new StringSelection(value), null);
    }//GEN-LAST:event_lblDepositeAddressValueMousePressed

    private void lblDepositeAmountValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDepositeAmountValueMouseClicked
        // TODO add your handling code here:
        String value = lblDepositeAmountValue.getText();
        value = value.substring(0, value.indexOf(" "));
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(new StringSelection(value), null);
    }//GEN-LAST:event_lblDepositeAmountValueMouseClicked

    private void lblExpiryTimeValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExpiryTimeValueMouseClicked
        // TODO add your handling code here:
        String value = lblExpiryTimeValue.getText();
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(new StringSelection(value), null);
    }//GEN-LAST:event_lblExpiryTimeValueMouseClicked

    private void lblOrderIdValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOrderIdValueMouseClicked
        // TODO add your handling code here:
        String value = lblOrderIdValue.getText();
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(new StringSelection(value), null);
    }//GEN-LAST:event_lblOrderIdValueMouseClicked

    private void lblQrcodeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblQrcodeMousePressed
        // TODO add your handling code here:
        DlgQRCode dlgQrcode = new DlgQRCode(lblDepositeAddressValue.getText());
        dlgQrcode.centerOnScreen();
        dlgQrcode.setVisible(true);
    }//GEN-LAST:event_lblQrcodeMousePressed

    private void lblOrderStatusUrlValueMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOrderStatusUrlValueMousePressed
        // TODO add your handling code here:
        String value = lblOrderStatusUrlValue.getText();
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(new StringSelection(value), null);
        URL url = null;
        try {
            url = new URL(value);
        } catch (MalformedURLException ex) {
            Logger.getLogger(PnlExchangeTransationScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            openWebpage(url.toURI());
        } catch (URISyntaxException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_lblOrderStatusUrlValueMousePressed

    private void openWebpage(URI uri) {
        Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
        if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
            try {
                desktop.browse(uri);
            } catch (Exception e) {

            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblDepositAddress;
    private javax.swing.JLabel lblDepositeAddressValue;
    private javax.swing.JLabel lblDepositeAmount;
    private javax.swing.JLabel lblDepositeAmountValue;
    private javax.swing.JLabel lblExpiryTime;
    private javax.swing.JLabel lblExpiryTimeValue;
    private javax.swing.JLabel lblOrderIdValue;
    private javax.swing.JLabel lblOrderStatusUrl;
    private javax.swing.JLabel lblOrderStatusUrlValue;
    private javax.swing.JLabel lblQrcode;
    // End of variables declaration//GEN-END:variables
}
