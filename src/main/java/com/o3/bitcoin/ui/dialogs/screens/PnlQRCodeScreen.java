/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.o3.bitcoin.ui.dialogs.screens;

import com.google.zxing.EncodeHintType;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import com.o3.bitcoin.model.manager.ConfigManager;
import com.o3.bitcoin.qrcode.QRCodeUtil;
import java.io.File;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author
 */

/**
 * <p>Class that creates UI form for QRCode dialog</p> 
 */
public class PnlQRCodeScreen extends javax.swing.JPanel {

    private String address;
    public String qrcodeFilePath = null;
    private static int count = 0;
    
    private String amount;
    private String description;
    private String btcAmount;
    /**
     * Creates new form PnlQRCodeScreen
     */
    public PnlQRCodeScreen(String address) {
        this.address = address;
        initComponents();
        loadQRCode();
    }
    
    public PnlQRCodeScreen(String address, String description, String amount, String btcAmount)
    {
        this.address = address;
        this.amount = amount;
        this.description = description;
        this.btcAmount = btcAmount;
        initComponents();
        loadQRCode();
    }
    
    /**
     * function that creates and loads QRCode from address
     */
    public void loadQRCode() {
        try {
            String tmpDirPath = ConfigManager.CONFIG_ROOT+ File.separator+"tmp";
            File tmpDir = new File(tmpDirPath);
            if( !tmpDir.exists()) {
                tmpDir.mkdirs();
            }
            qrcodeFilePath = tmpDirPath + File.separator + "qrcode"+count+".png";
            if( count > 0 ) {
                String oldQrcodeFilePath = tmpDirPath + File.separator + "qrcode"+(count-1)+".png";
                File file = new File(oldQrcodeFilePath);
                if( file.exists() )
                    file.delete();
            }
            String charset = "UTF-8";
            Map hintMap = new HashMap();
            hintMap.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);
            QRCodeUtil.createQRCode("bitcoin:"+address + "?" + "amount=" + btcAmount + "&" + "label=label&" + "message=" + description, qrcodeFilePath, charset, hintMap, 200, 200);
            lblQrcode.setIcon(new ImageIcon(qrcodeFilePath));
            count++;
        }catch( Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    public String getQrcodeFilePath() {
        return qrcodeFilePath;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblQrcode = new javax.swing.JLabel();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        lblQrcode.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        lblQrcode.setOpaque(true);
        lblQrcode.setPreferredSize(new java.awt.Dimension(200, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblQrcode, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblQrcode;
    // End of variables declaration//GEN-END:variables
}
