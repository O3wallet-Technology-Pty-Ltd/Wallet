/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.o3.bitcoin.ui.dialogs.screens;

import com.o3.bitcoin.util.ResourcesProvider;
import javax.swing.SwingUtilities;

/**
 *
 * @author
 */

/**
 *<p>Class that creates progress control for Progress dialog</p> 
 */
public class PnlProgressScreen extends javax.swing.JPanel {
    private boolean completed;
    
    private PnlProgressScreen() {
        initComponents();
    }

    
    
    public static PnlProgressScreen create() {
        return new PnlProgressScreen();
    }

    public PnlProgressScreen setMinimum(int minimum) {
        progressBar.setMinimum(minimum);
        return this;
    }

    public PnlProgressScreen setMaximum(int maximum) {
        progressBar.setMaximum(maximum);
        return this;
    }

    public PnlProgressScreen setStatus(String status) {
        lblStatus.setText(status);
        return this;
    }

    public PnlProgressScreen setIndeterminant(boolean indeterminate) {
        progressBar.setIndeterminate(indeterminate);
        return this;
    }

    public void setProgress(final String status) {
        setProgress(status, -1);
    }

    public void setProgress(final String status, final int percent) {
        if (!progressBar.isIndeterminate() && percent >= progressBar.getMaximum()) {
            markCompleted();
        } else {
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    lblStatus.setText(status);
                    if (!progressBar.isIndeterminate()) {
                        progressBar.setValue(percent);
                    }
                }
            });
        }
    }

    public void markCompleted() {
        progressBar.setIndeterminate(false);
        progressBar.setMinimum(0);
        progressBar.setMaximum(100);
        progressBar.setValue(100);
        completed = true;
    }

    public void markCompleted(String status) {
        lblStatus.setText(status);
        markCompleted();
    }
    
    public boolean isCompleted() {
        return completed;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatus = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        lblMinutesStatus = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(400, 250));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblStatus.setFont(ResourcesProvider.Fonts.BOLD_SMALL_FONT);
        lblStatus.setText("Loading ...");
        add(lblStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 264, -1));

        progressBar.setForeground(ResourcesProvider.Colors.NAV_MENU_DASHBOARD_COLOR);
        progressBar.setIndeterminate(true);
        progressBar.setPreferredSize(new java.awt.Dimension(250, 25));
        add(progressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 370, -1));

        lblMinutesStatus.setText("This can take few seconds to few minutes...");
        add(lblMinutesStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblMinutesStatus;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables
}
