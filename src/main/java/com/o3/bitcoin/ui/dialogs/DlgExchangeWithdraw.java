/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.o3.bitcoin.ui.dialogs;

import com.o3.bitcoin.ui.ApplicationUI;
import com.o3.bitcoin.ui.component.XButtonFactory;
import com.o3.bitcoin.ui.dialogs.screens.PnlExchangeWithdrawScreen;
import com.o3.bitcoin.util.ResourcesProvider;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JPanel;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author
 */
public class DlgExchangeWithdraw extends BasicDialog {

    private static final Logger logger = LoggerFactory.getLogger(DlgExchangeWithdraw.class);
    private PnlExchangeWithdrawScreen pnlExchangeWithdrawScreen;
    private List<JButton> controls = new ArrayList<>();
    
    /**
     * Creates new form DlgExchangeWithdraw
     */
    public DlgExchangeWithdraw() {
        super(false);
        setupUI();
    }
    
    
    @Override
    protected JPanel getMainContentPanel() {
        if (pnlExchangeWithdrawScreen == null) {
            pnlExchangeWithdrawScreen = new PnlExchangeWithdrawScreen();
        }
        return pnlExchangeWithdrawScreen;
    }
    
    @Override
    protected List<JButton> getControls() {
        controls = super.getControls();
        controls.add(0, getWithdrawButton());
        return controls;
    }
    
    /**
     * function to get Login button for dialog and attach event handler
     * @return Login button
    */
    protected JButton getWithdrawButton() {
        JButton withdrawButton = new JButton("Withdraw");
        XButtonFactory.themedButton(withdrawButton)
                .background(ResourcesProvider.Colors.NAV_MENU_WALLET_COLOR)
                .color(Color.WHITE)
                .font(ResourcesProvider.Fonts.BOLD_MEDIUM_FONT);
        
        withdrawButton.addActionListener(new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                handleWithdrawButtonClickEvent(e);
            }
        });
        return withdrawButton;
    }
    
    /**
     * callback function for Login button event 
    */
    protected void handleWithdrawButtonClickEvent(ActionEvent e) {
        try {
            
        } catch (Exception ex) {
            logger.error("Withdraw failed: {}", ex.getMessage(), ex);
            ApplicationUI.get().showError(ex);
        }
    }
    
    @Override
    protected String getHeadingText() {
        return "Withdraw";
    }
    
    @Override
    protected void handleDefaultCloseEvent(ActionEvent e) {
        handleCloseDialogControlEvent(e);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
