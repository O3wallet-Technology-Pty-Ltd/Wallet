/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.o3.bitcoin.ui.screens.exchange;

import com.o3.bitcoin.util.ResourcesProvider;
import com.o3.bitcoin.util.exchange.ExchangeService;
import com.o3.bitcoin.util.exchange.ExchangeServiceFactory;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author
 */
public class PnlExchangeStats extends javax.swing.JPanel implements BasicExchangeScreen{

    /**
     * Creates new form PnlExchangeStats
     */
    
    private static Timer statsInfoTimer = null;
    private boolean isFirstTime = true;
    
    private String currentExchange = "";
    public PnlExchangeStats() {
        initComponents();
    }
    
    public void loadExchangeData() {
        try {
            //pnlExchangeGraph.setVisible(false);
            if( !currentExchange.isEmpty())
            {
                if( isFirstTime ) {
                    pnlExchangeOverviewHead1.updateTickerValues(currentExchange);
                    pnlBuySellBitcoins1.loadData();
                    isFirstTime = false;
                }
                else {
                    pnlExchangeOverviewHead1.updateTickerValues();
                    pnlBuySellBitcoins1.adjustLabels();
                    pnlBuySellBitcoins1.updateAccountBalance();
                }
            }
        }catch(Exception e) {
            System.out.println("Exception loadExchangeData="+e.getMessage());
        }
        startMarketInfoTimer();
    }
    
    public void loadGraph() {
        pnlExchangeGraph.loadData();
    }
    
    public void setIsFirstTime(boolean boolVal) {
        isFirstTime = boolVal;
    } 
    
    private void startMarketInfoTimer() {
        if (statsInfoTimer == null) {
            statsInfoTimer = new Timer(30000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if(!currentExchange.isEmpty())// new line line
                    {
                        pnlExchangeOverviewHead1.updateTickerValues();
                        pnlBuySellBitcoins1.updateAccountBalance();
                    }
                }
            });
            statsInfoTimer.start();
        }
        else{
            if( !statsInfoTimer.isRunning())// new line line
                statsInfoTimer.start();
        }
    }
    
    public static void stopMarketInfoTimer(){
        if(statsInfoTimer != null){
            if(statsInfoTimer.isRunning())
                statsInfoTimer.stop();
        }
    }
    
    public void updateTickerData(String exchangeName){
        currentExchange = exchangeName;
        try {
            pnlExchangeOverviewHead1.populateCurrencyModel(exchangeName);
            ////pnlExchangeOverviewHead1.updateTickerValues(exchangeName);
        } catch (Exception ex) {
            Logger.getLogger(PnlExchangeStats.class.getName()).log(Level.SEVERE, null, ex);
        }
        startMarketInfoTimer();
    }
    
    public PnlExchangeGraph getExchangeGraphPanel() {
        return pnlExchangeGraph;
    }

   public PnlExchangeOverviewHead getExchangeOverviewHead() {
       return pnlExchangeOverviewHead1;
   }
   
   public PnlBuySellBitcoins getBuySellPanel() {
       return pnlBuySellBitcoins1;
   }
           
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlExchangeOverviewHead1 = new com.o3.bitcoin.ui.screens.exchange.PnlExchangeOverviewHead();
        pnlExchangeGraph = new com.o3.bitcoin.ui.screens.exchange.PnlExchangeGraph();
        pnlBuySellBitcoins1 = new com.o3.bitcoin.ui.screens.exchange.PnlBuySellBitcoins();

        setLayout(new java.awt.BorderLayout());
        add(pnlExchangeOverviewHead1, java.awt.BorderLayout.NORTH);
        add(pnlExchangeGraph, java.awt.BorderLayout.CENTER);
        add(pnlBuySellBitcoins1, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.o3.bitcoin.ui.screens.exchange.PnlBuySellBitcoins pnlBuySellBitcoins1;
    private com.o3.bitcoin.ui.screens.exchange.PnlExchangeGraph pnlExchangeGraph;
    private com.o3.bitcoin.ui.screens.exchange.PnlExchangeOverviewHead pnlExchangeOverviewHead1;
    // End of variables declaration//GEN-END:variables
}
